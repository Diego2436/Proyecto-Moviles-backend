# Generated by Django 5.0.1 on 2024-01-12 19:58

import django.db.models.deletion
from django.db import migrations, models
from decimal import Decimal
import bcrypt
import secrets
import string
import random

def generar_contrasena_aleatoria(longitud=6):
    caracteres = string.ascii_letters + string.digits  # letras y dígitos
    contrasena_plana = ''.join(secrets.choice(caracteres) for _ in range(longitud))
    return contrasena_plana

def cifrar_contrasena(contrasena_plana, longitud_maxima=50):

    # Generar una sal aleatoria y cifrar la contraseña
    sal = bcrypt.gensalt()
    contrasena_cifrada = bcrypt.hashpw(contrasena_plana.encode('utf-8'), sal)
    
    # Limitar la longitud a 50 caracteres
    contrasena_cifrada = contrasena_cifrada[:longitud_maxima].decode('utf-8')

    return contrasena_cifrada

def generar_correo_aleatorio(nombre):
    dominios = ['gmail.com', 'yahoo.com', 'hotmail.com', 'outlook.com']
    nombre_sin_espacios = nombre.replace(" ", "").lower()
    numero_aleatorio = random.randint(100, 999)
    dominio_aleatorio = random.choice(dominios)
    correo_aleatorio = f"{nombre_sin_espacios}{numero_aleatorio}@{dominio_aleatorio}"
    return correo_aleatorio

def cargar_datos_iniciales(apps, schema_editor):
    FoodTruck = apps.get_model('api', 'FoodTruck')
    Empleado = apps.get_model('api', 'Empleado')
    Producto = apps.get_model('api', 'Producto')

    # Crear FoodTrucks
    foodtruck1 = FoodTruck.objects.create(nombre='Sabores del Sur', descripcion='Comida tradicional del sur de México')
    foodtruck2 = FoodTruck.objects.create(nombre='Sushi Express', descripcion='Delicioso sushi para llevar')
    foodtruck3 = FoodTruck.objects.create(nombre='Burger Fusion', descripcion='Hamburguesas gourmet con un toque único')

    #Crear Empleados aleatorios
    with open('empleados_data.txt', 'w') as file:
        for foodtruck in [foodtruck1, foodtruck2, foodtruck3]:
            for i in range(4):  # 4 employees per food truck (2 employees and 2 delivery persons)
                contrasena_random = generar_contrasena_aleatoria()

                rol = 'Empleado' if i < 2 else 'Repartidor'
                numero_empleado = f'{rol[0]}{foodtruck.id:03d}{i+1:02d}'  # E/R + FoodTruckID + EmployeeID
                contrasena = cifrar_contrasena(contrasena_random)
                nombre = f'{random.choice(["Juan", "María", "Carlos", "Laura", "Pedro", "Ana", "Ricardo", "Isabel", "Fernando", "Diana", "Javier", "Sofia"])} {random.choice(["Perez", "Rodriguez", "Gutierrez", "Chavez", "Hernandez", "Lopez", "Martinez", "Morales", "Garcia", "Ramirez", "Rodriguez", "Alvarez"])}'
                correo = generar_correo_aleatorio(nombre)

                # Save employee data to the text file
                file.write(f"NumeroEmpleado: {numero_empleado}\n")
                file.write(f"Password: {contrasena_random}\n")
                file.write(f"Nombre: {nombre}\n")
                file.write(f"Rol: {rol}\n")
                file.write(f"FoodTruck: {foodtruck.nombre}\n")
                file.write(f"Email: {correo}\n")
                file.write("\n")

                # Create employee objects in the database
                Empleado.objects.create(numeroEmpleado=numero_empleado, password=contrasena, nombre=nombre, rol=rol, foodtruck=foodtruck, email=correo)


    # Crear Productos para FoodTruck 1
    Producto.objects.create(nombre='Tacos al Pastor', descripcion='Tacos de cerdo adobado con piña', precio=Decimal('30.00'), imagen='fd1_tacos_al_pastor.jpg', foodtruck=foodtruck1, categoria='Tacos')
    Producto.objects.create(nombre='Quesadillas Mixtas', descripcion='Quesadillas con variedad de quesos y guarniciones', precio=Decimal('25.50'), imagen='fd1_quesadillas_mixtas.jpg',foodtruck=foodtruck1, categoria='Quesadillas')
    Producto.objects.create(nombre='Guacamole con Totopos', descripcion='Guacamole fresco con totopos', precio=Decimal('15.00'), imagen='fd1_guacamole_con_totopos.jpg', foodtruck=foodtruck1, categoria='Entradas')
    Producto.objects.create(nombre='Tortas de Carnitas', descripcion='Tortas con carnitas de cerdo', precio=Decimal('40.00'), imagen='fd1_tortas_de_carnitas.jpg', foodtruck=foodtruck1, categoria='Tortas')
    Producto.objects.create(nombre='Aguas Frescas', descripcion='Variedad de aguas frescas', precio=Decimal('10.00'), imagen='fd1_aguas_frescas.jpg', foodtruck=foodtruck1, categoria='Bebidas')

    # Crear Productos para FoodTruck 2
    Producto.objects.create(nombre='Sushi Roll Tropical', descripcion='Roll de sushi con ingredientes tropicales', precio=Decimal('50.00'), imagen='fd2_sushi_roll_tropical.jpg', foodtruck=foodtruck2, categoria='Sushi')
    Producto.objects.create(nombre='Tempura de Verduras', descripcion='Verduras tempurizadas con salsa de soja', precio=Decimal('35.75'), imagen='fd2_tempura_de_verduras.jpg', foodtruck=foodtruck2, categoria='Entradas')
    Producto.objects.create(nombre='Nigiri de Salmón', descripcion='Nigiri de salmón fresco', precio=Decimal('25.00'), imagen='fd2_nigiri_de_salmon.jpg', foodtruck=foodtruck2, categoria='Sushi')
    Producto.objects.create(nombre='Roll de Aguacate', descripcion='Roll de sushi con aguacate y pepino', precio=Decimal('40.00'), imagen='fd2_roll_de_aguacate.jpg', foodtruck=foodtruck2, categoria='Sushi')
    Producto.objects.create(nombre='Sopa Miso', descripcion='Sopa tradicional japonesa', precio=Decimal('20.00'), imagen='fd2_sopa_miso.jpg', foodtruck=foodtruck2, categoria='Sopas')

    # Crear Productos para FoodTruck 3
    Producto.objects.create(nombre='Burger Deluxe', descripcion='Hamburguesa gourmet con queso azul y cebolla caramelizada', precio=Decimal('60.00'), imagen='fd3_burger_deluxe.jpg', foodtruck=foodtruck3, categoria='Hamburguesas')
    Producto.objects.create(nombre='Papas Gourmet', descripcion='Papas fritas con alioli y hierbas finas', precio=Decimal('30.50'), imagen='fd3_papas_gourmet.jpg', foodtruck=foodtruck3, categoria='Acompañamientos')
    Producto.objects.create(nombre='Tacos de Ribeye', descripcion='Tacos con carne de ribeye y guacamole', precio=Decimal('45.00'), imagen='fd3_tacos_de_ribeye.jpg', foodtruck=foodtruck3, categoria='Tacos')
    Producto.objects.create(nombre='Ensalada César con Pollo', descripcion='Ensalada con pollo a la parrilla y aderezo césar', precio=Decimal('35.00'), imagen='fd3_ensalada_cesar_con_pollo.jpg', foodtruck=foodtruck3, categoria='Ensaladas')
    Producto.objects.create(nombre='Malteadas Clásicas', descripcion='Malteadas con sabores clásicos', precio=Decimal('25.00'), imagen='fd3_malteadas_clasicas.jpg', foodtruck=foodtruck3, categoria='Bebidas')


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FoodTruck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(blank=True, max_length=255, null=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usuario', models.CharField(blank=True, max_length=30, null=True)),
                ('password', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('codigo', models.CharField(blank=True, max_length=10, null=True)),
                ('verificacion', models.CharField(default='NO', max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numeroEmpleado', models.CharField(blank=True, max_length=20, null=True)),
                ('password', models.CharField(blank=True, max_length=50, null=True)),
                ('nombre', models.CharField(blank=True, max_length=50, null=True)),
                ('rol', models.CharField(blank=True, max_length=10, null=True)),
                ('foodtruck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.foodtruck')),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('precio_total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('fecha_pedido', models.CharField(blank=True, max_length=45, null=True)),
                ('fecha_entrega', models.CharField(blank=True, max_length=45, null=True)),
                ('fecha_repartidor', models.CharField(blank=True, max_length=45, null=True)),
                ('estado', models.CharField(blank=True, max_length=20, null=True)),
                ('direccion', models.CharField(blank=True, max_length=400, null=True)),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.empleado')),
                ('foodtruck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.foodtruck')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.usuario')),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(blank=True, max_length=255, null=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('precio', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('imagen', models.CharField(blank=True, max_length=50, null=True)),
                ('categoria', models.CharField(blank=True, max_length=20, null=True)),
                ('foodtruck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.foodtruck')),
            ],
        ),
        migrations.CreateModel(
            name='DetallesPedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField(blank=True, null=True)),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.pedido')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.producto')),
            ],
        ),
        migrations.RunPython(cargar_datos_iniciales),
    ]
